import "importClasses.stg"

service(resourceDefinition, generator)::= <<\<?php

namespace <namespace()>\\Service;

// Class imports
<resourceDefinition.serviceDefinition.classImports.php:importClass(); separator="\n">

// Namespace imports
<resourceDefinition.serviceDefinition.namespaceImports.php:importClass(); separator="\n">
use <namespace()>\\Exception;

/**
<if (resourceDefinition.doc)> * <resourceDefinition.doc; separator="\n * ">
 *
<endif>
 * @package <namespace()>
 *
 * Generated by <generator>
 */
interface <resourceDefinition.name; format="cap">Service
{
    <resourceDefinition.methodDefinitions:resourceMethod(); separator="\n\n">
}
>>

resourceMethod(resourceMethodDefinition)::= <<
/**
<if (resourceMethodDefinition.doc)>
 * <resourceMethodDefinition.doc:descriptionDocBlock(); separator="\n * ">
<endif>
<if (resourceMethodDefinition.argumentDefinitions)>
 *
 * <resourceMethodDefinition.argumentDefinitions:paramDocBlock(); separator="\n * ">
<endif>
<if (resourceMethodDefinition.returnType)>
 *
 * <resourceMethodDefinition:returnTypeDocBlock()>
<endif>
<if (resourceMethodDefinition.throwableExceptions)>
 *
 * <resourceMethodDefinition.throwableExceptions:exceptionDocBlock(); separator="\n * ">
<endif>
 */
<resourceMethodSignature(resourceMethodDefinition)>;
>>

namespace()::= <%
<resourceDefinition.serviceDefinition.namespaces.php; format="phpNamespace">
%>

descriptionDocBlock(description)::= <%
<trim(description)>
%>

paramDocBlock(argumentDefinition)::= <%
<argumentDefinition; format="docBlock">
%>

returnTypeDocBlock(resourceMethodDefinition)::= <%
@return <resourceMethodDefinition.returnType; format="docBlock;optional">
<if (resourceMethodDefinition.returnDoc)><\ ><trim(resourceMethodDefinition.returnDoc)><endif>
%>

exceptionDocBlock(exceptionIdentifier)::= <%
@throws Exception\\<exceptionIdentifier; format="cap">
%>

resourceMethodSignature(resourceMethodDefinition)::= <%
public function <resourceMethodDefinition.name>(
<resourceMethodDefinition.argumentDefinitions:resourceMethodParameter(); separator=", ">
): <resourceMethodReturnType(resourceMethodDefinition)>
%>

resourceMethodParameter(argumentDefinition)::= <%
<argumentDefinition; format="parameter">
%>

resourceMethodReturnType(resourceMethodDefinition)::= <%
<if (resourceMethodDefinition.returnType)><resourceMethodDefinition.returnType; format="typeHint;optional"><else>void<endif>
%>